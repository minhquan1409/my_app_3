import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class DeliveredOrdersScreen extends StatelessWidget {
  const DeliveredOrdersScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<QuerySnapshot>(
      stream: FirebaseFirestore.instance
          .collection('orders')
          .where('status', isEqualTo: 'ƒê√£ giao')
          .snapshots(),
      builder: (context, snapshot) {
        if (snapshot.hasError) {
          return const Center(child: Text('‚ùå ƒê√£ x·∫£y ra l·ªói.'));
        }

        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(child: CircularProgressIndicator());
        }

        final orders = snapshot.data!.docs;

        if (orders.isEmpty) {
          return const Center(child: Text('Kh√¥ng c√≥ ƒë∆°n h√†ng ƒë√£ giao.'));
        }

        return ListView.builder(
          itemCount: orders.length,
          itemBuilder: (context, index) {
            final orderDoc = orders[index];
            final orderData = orderDoc.data() as Map<String, dynamic>;

            final userName = orderData['name'] ?? 'Kh√¥ng r√µ';
            final userAddress = orderData['address'] ?? '';
            final userPhone = orderData['phone'] ?? '';
            final totalPrice = orderData['total'] ?? 0;

            // L·∫•y danh s√°ch items t·ª´ Firestore
            final items = List<Map<String, dynamic>>.from(orderData['items'] ?? []);

            return Card(
              margin: const EdgeInsets.all(12),
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
              child: Padding(
                padding: const EdgeInsets.all(12),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text('üë§ Ng∆∞·ªùi ƒë·∫∑t: $userName',
                        style: const TextStyle(fontWeight: FontWeight.bold)),
                    const SizedBox(height: 4),
                    Text('üìç ƒê·ªãa ch·ªâ: $userAddress'),
                    const SizedBox(height: 4),
                    Text('üìû SƒêT: $userPhone'),
                    const SizedBox(height: 8),

                    const Text('üõí S·∫£n ph·∫©m:',
                        style: TextStyle(fontWeight: FontWeight.bold)),
                    const SizedBox(height: 4),

                    // Hi·ªÉn th·ªã t·ª´ng s·∫£n ph·∫©m
                    ...items.map((item) {
                      final productData = item['product'] ?? {};
                      final productName = productData['name'] ?? 'Kh√¥ng r√µ';
                      final productPrice = productData['price'] ?? 0;
                      final imageUrl = productData['imageUrl'] ?? '';
                      final quantity = item['quantity'] ?? 1;

                      return ListTile(
                        contentPadding: EdgeInsets.zero,
                        leading: imageUrl.isNotEmpty
                            ? Image.network(imageUrl,
                                width: 50, height: 50, fit: BoxFit.cover)
                            : const Icon(Icons.image_not_supported),
                        title: Text(productName),
                        subtitle: Text(
                            'Gi√°: ${productPrice.toStringAsFixed(0)} VND\nS·ªë l∆∞·ª£ng: $quantity'),
                      );
                    }).toList(),

                    const SizedBox(height: 4),
                    Text('üí∞ T·ªïng ti·ªÅn: ${totalPrice.toStringAsFixed(0)} VND',
                        style: const TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Colors.deepOrange)),
                    const SizedBox(height: 8),

                    const Text('‚úÖ ƒê√£ giao',
                        style: TextStyle(
                            color: Colors.green,
                            fontWeight: FontWeight.bold,
                            fontSize: 16)),
                  ],
                ),
              ),
            );
          },
        );
      },
    );
  }
}
